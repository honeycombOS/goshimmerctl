#!/usr/bin/env python3
# This file is part of IOTA honeycombOS Linux Distribution
# (https://github.com/iotaledger/meta-iota)
# Copyright (c) 2020 IOTA Stiftun

import os
import json
import errno
import sys
import subprocess
from optparse import OptionParser

parser = OptionParser()
parser.add_option("--off", action="store_false", dest="on", default=False, help="Disable GoShimmer Dashboard.")
parser.add_option("--on", action="store_true", dest="on", default=True, help="Enable GoShimmer Dashboard (default).")

(options, args) = parser.parse_args()

if os.geteuid() != 0:
    print("You need root permissions to do this!")
    sys.exit(1)

status = os.system('systemctl is-active --quiet goshimmer') # will return 0 for active else inactive.
if not status:
    try:
        print("Stopping goshimmer.service.")
        os.system("systemctl stop goshimmer")
    except:
        print("Error while stopping goshimmer systemd service.")

config_file = "/var/lib/goshimmer/config.json"

lines = ""
with open(config_file, "r") as f:
    for line in f.readlines():
        lines += line.replace("\n", "")

config_json = json.loads(lines)
if options.on:
    config_json["dashboard"]["bindAddress"] = "0.0.0.0:8081"
else:
    config_json["dashboard"]["bindAddress"] = "127.0.0.1:8081"

try:
    f = open(config_file, "w")
    f.write(json.dumps(config_json, indent=1))
    f.close()
    
    print("GoShimmer Dashboard was enabled.")

except IOError as e:
    errorn, strerror = e.args
    if errorn == errno.EACCES:
        print("You need root permissions to do this!")
        sys.exit(1)

if not status: # service was running, restart it
    print("Starting goshimmer.service.")
    os.system('systemctl start goshimmer')

